{
  "name": "coc-vetur",
  "version": "1.1.2",
  "description": "Vue language server extension for coc.nvim using vetur",
  "main": "lib/index.js",
  "publisher": "chemzqm",
  "engines": {
    "coc": "^0.0.58"
  },
  "keywords": [
    "coc.nvim",
    "vue",
    "vetur"
  ],
  "scripts": {
    "clean": "rimraf lib",
    "build": "webpack",
    "prepare": "npm-run-all clean build"
  },
  "activationEvents": [
    "onLanguage:vue"
  ],
  "contributes": {
    "configuration": {
      "title": "Vetur",
      "properties": {
        "vetur.completion.autoImport": {
          "type": "boolean",
          "default": true,
          "description": "Include completion for module export and auto import them"
        },
        "vetur.completion.useScaffoldSnippets": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable Vetur's built-in scaffolding snippets"
        },
        "vetur.completion.tagCasing": {
          "type": "string",
          "default": "kebab",
          "enum": [
            "initial",
            "kebab"
          ],
          "enumDescriptions": [
            "use the key in `components: {...}` as is for tag completion and do not force any casing",
            "kebab-case completion for <my-tag>"
          ],
          "description": "Casing conversion for tag completion"
        },
        "vetur.grammar.customBlocks": {
          "type": "object",
          "default": {
            "docs": "md",
            "i18n": "json"
          },
          "description": "Mapping from custom block tag name to language name. Used for generating grammar to support syntax highlighting for custom blocks."
        },
        "vetur.validation.template": {
          "type": "boolean",
          "default": true,
          "description": "Validate vue-html in <template> using eslint-plugin-vue"
        },
        "vetur.validation.style": {
          "type": "boolean",
          "default": true,
          "description": "Validate css/scss/less/postcss in <style>"
        },
        "vetur.validation.script": {
          "type": "boolean",
          "default": true,
          "description": "Validate js/ts in <script>"
        },
        "vetur.format.options.tabSize": {
          "type": "number",
          "default": 2,
          "description": "Number of spaces per indentation level. Inherited by all formatters."
        },
        "vetur.format.options.useTabs": {
          "type": "boolean",
          "default": false,
          "description": "Use tabs for indentation. Inherited by all formatters."
        },
        "vetur.format.defaultFormatter.html": {
          "type": "string",
          "default": "prettyhtml",
          "enum": [
            "none",
            "prettyhtml",
            "js-beautify-html",
            "prettier"
          ],
          "enumDescriptions": [
            "disable formatting",
            "prettyhtml",
            "html formatter of js-beautify",
            "prettier"
          ],
          "description": "Default formatter for <template> region"
        },
        "vetur.format.defaultFormatter.css": {
          "type": "string",
          "default": "prettier",
          "enum": [
            "none",
            "prettier"
          ],
          "enumDescriptions": [
            "disable formatting",
            "css formatter using css parser from prettier"
          ],
          "description": "Default formatter for <style> region"
        },
        "vetur.format.defaultFormatter.postcss": {
          "type": "string",
          "default": "prettier",
          "enum": [
            "none",
            "prettier"
          ],
          "enumDescriptions": [
            "disable formatting",
            "postcss formatter using css parser from prettier"
          ],
          "description": "Default formatter for <style lang='postcss'> region"
        },
        "vetur.format.defaultFormatter.scss": {
          "type": "string",
          "default": "prettier",
          "enum": [
            "none",
            "prettier"
          ],
          "enumDescriptions": [
            "disable formatting",
            "scss formatter using scss parser from prettier"
          ],
          "description": "Default formatter for <style lang='scss'> region"
        },
        "vetur.format.defaultFormatter.less": {
          "type": "string",
          "default": "prettier",
          "enum": [
            "none",
            "prettier"
          ],
          "enumDescriptions": [
            "disable formatting",
            "less formatter using postcss parser from prettier"
          ],
          "description": "Default formatter for <style lang='less'> region"
        },
        "vetur.format.defaultFormatter.stylus": {
          "type": "string",
          "default": "stylus-supremacy",
          "enum": [
            "none",
            "stylus-supremacy"
          ],
          "enumDescriptions": [
            "disable formatting",
            "stylus formatter from stylus-supremacy"
          ],
          "description": "Default formatter for <style lang='stylus'> region"
        },
        "vetur.format.defaultFormatter.js": {
          "type": "string",
          "default": "prettier",
          "enum": [
            "none",
            "prettier",
            "prettier-eslint",
            "vscode-typescript"
          ],
          "enumDescriptions": [
            "disable formatting",
            "js formatter from prettier",
            "prettier-eslint",
            "js formatter from TypeScript"
          ],
          "description": "Default formatter for <script> region"
        },
        "vetur.format.defaultFormatter.ts": {
          "type": "string",
          "default": "prettier",
          "enum": [
            "none",
            "prettier",
            "vscode-typescript"
          ],
          "enumDescriptions": [
            "disable formatting",
            "ts formatter using typescript parser from prettier",
            "ts formatter from TypeScript"
          ],
          "description": "Default formatter for <script> region"
        },
        "vetur.format.defaultFormatterOptions": {
          "type": "object",
          "properties": {
            "prettier": {
              "type": "object",
              "description": "Global prettier config used by prettier formatter. Used by `prettier` and `prettier-eslint`.\n\nVetur will prefer a prettier config file at home directory if one exists.",
              "properties": {}
            },
            "prettyhtml": {
              "type": "object",
              "description": "Options for prettyhtml",
              "properties": {
                "printWidth": {
                  "type": "number",
                  "default": 100,
                  "description": "Maximum amount of characters allowed per line"
                },
                "singleQuote": {
                  "type": "boolean",
                  "default": false,
                  "description": "Whether to use single quotes by default"
                },
                "wrapAttributes": {
                  "type": "boolean",
                  "default": false,
                  "description": "Whether to wrap attributes"
                },
                "sortAttributes": {
                  "type": "boolean",
                  "default": false,
                  "description": "Whether to sort attributes"
                }
              }
            },
            "js-beautify-html": {
              "type": "object",
              "description": "Options for js-beautify"
            }
          },
          "default": {
            "js-beautify-html": {
              "wrap_attributes": "force-expand-multiline"
            },
            "prettyhtml": {
              "printWidth": 100,
              "singleQuote": false,
              "wrapAttributes": false,
              "sortAttributes": false
            }
          },
          "description": "Options for all default formatters"
        },
        "vetur.format.styleInitialIndent": {
          "type": "boolean",
          "default": false,
          "description": "Whether to have initial indent for <style> region"
        },
        "vetur.format.scriptInitialIndent": {
          "type": "boolean",
          "default": false,
          "description": "Whether to have initial indent for <script> region"
        },
        "vetur.trace.server": {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and Vue Language Server."
        },
        "vetur.dev.vlsPath": {
          "type": "string",
          "description": "Path to VLS for Vetur developers. There are two ways of using it. \n\n1. Clone vuejs/vetur from GitHub, build it and point it to the ABSOLUTE path of `/server`.\n2. `yarn global add vue-language-server` and point Vetur to the installed location (`yarn global dir` + node_modules/vue-language-server)"
        }
      }
    }
  },
  "author": "chemzqm@gmail.com",
  "license": "MIT",
  "devDependencies": {
    "@chemzqm/tsconfig": "^0.0.3",
    "@chemzqm/tslint-config": "^1.0.18",
    "@types/node": "^11.11.0",
    "coc.nvim": "^0.0.71",
    "rimraf": "^2.6.3",
    "ts-loader": "^6.0.3",
    "tslint": "^5.17.0",
    "typescript": "^3",
    "vscode-languageserver-protocol": "^3.15.0-next.6",
    "webpack": "^4.34.0",
    "webpack-cli": "^3.3.4"
  },
  "dependencies": {
    "vue-language-server": "^0.0.56"
  }
}
